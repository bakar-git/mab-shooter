function signout($user_name) {
    $url = 'https://portal.cust.pk/CUSTAppService/signOutAll.do?';
    $data = 'User_name=' . urlencode($user_name);
    return json_decode(postData($url, $data));
}

function signin($name, $pwd) {
    $url = 'https://portal.cust.pk/CUSTAppService/signIn.do';
    $data = 'User_name=' . urlencode($name) . '&User_Password=' . urlencode($pwd);
    return json_decode(postData($url, $data));
}
function info($name, $id) {
    $url = 'https://portal.cust.pk/CUSTAppService/candidateGeneralInfo.do';
    $data = 'User_name=' . urlencode($name) . '&Session_Id=' . urlencode($id);
    return json_decode(postData($url, $data));
}

function postData($url, $data) {
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    // curl_setopt($ch, CURLOPT_PROXY, '127.0.0.1:8888');
    // curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
    // curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    $response = curl_exec($ch);
    curl_close($ch);

    return $response;
}